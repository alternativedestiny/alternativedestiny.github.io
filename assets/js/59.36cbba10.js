(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{425:function(t,a,s){"use strict";s.r(a);var e=s(3),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"_17-geatpy-进化算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-geatpy-进化算法"}},[t._v("#")]),t._v(" 17. Geatpy 进化算法")]),t._v(" "),a("h2",{attrs:{id:"_1-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介"}},[t._v("#")]),t._v(" 1. 简介")]),t._v(" "),a("h3",{attrs:{id:"_1-1-geatpy-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-geatpy-简介"}},[t._v("#")]),t._v(" 1.1. Geatpy 简介")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Geatpy 是一个高性能实用型进化算法工具箱，提供许多已实现的进化算法中各项重要操作的库函数，并提供一个高度模块化、耦合度低的面向对象的进化算法框架，利用“定义问题类 + 调用算法模板”的模式来进行进化优化，可用于求解单目标优化、多目标优化、复杂约束优化、组合优化、混合编码进化优化等，并且能和 SCOOP 等框架紧密配合进行分布式计算。")])]),t._v(" "),a("li",[a("p",[t._v("安装")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" geatpy\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"_1-2-遗传算法简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-遗传算法简介"}},[t._v("#")]),t._v(" 1.2. 遗传算法简介")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("遗传算法简介")]),t._v(" "),a("blockquote",[a("p",[t._v("遗传算法（Genetic Algorithm, GA）是模拟达尔文生物进化论的自然选择和遗传学机理的生物进化过程的计算模型，是一种通过模拟自然进化过程搜索最优解的方法。\n其主要特点是直接对结构对象进行操作，不存在求导和函数连续性的限定；具有内在的隐并行性和更好的全局寻优能力；采用概率化的寻优方法，不需要确定的规则就能自动获取和指导优化的搜索空间，自适应地调整搜索方向。\n遗传算法以一种群体中的所有个体为对象，并利用随机化技术指导对一个被编码的参数空间进行高效搜索。其中，选择、交叉和变异构成了遗传算法的遗传操作；参数编码、初始群体的设定、适应度函数的设计、遗传操作设计、控制参数设定五个要素组成了遗传算法的核心内容。")])])])]),t._v(" "),a("h2",{attrs:{id:"_2-算法介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法介绍"}},[t._v("#")]),t._v(" 2. 算法介绍")]),t._v(" "),a("h3",{attrs:{id:"_2-1-多目标优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-多目标优化"}},[t._v("#")]),t._v(" 2.1. 多目标优化")]),t._v(" "),a("ol",[a("li",[t._v("适应性权重遗传算法 (awGA)")]),t._v(" "),a("li",[t._v("基于分解的多目标进化算法 (MOEA)")]),t._v(" "),a("li",[t._v("非支配排序遗传算法 (NSGAⅡ)")])]),t._v(" "),a("h2",{attrs:{id:"_3-使用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用方法"}},[t._v("#")]),t._v(" 3. 使用方法")]),t._v(" "),a("h3",{attrs:{id:"_3-1-单目标优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-单目标优化"}},[t._v("#")]),t._v(" 3.1. 单目标优化")]),t._v(" "),a("ol",[a("li",[t._v("目标函数")]),t._v(" "),a("li",[t._v("代码")])]),t._v(" "),a("h3",{attrs:{id:"_3-2-多目标优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-多目标优化"}},[t._v("#")]),t._v(" 3.2. 多目标优化")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("目标函数")]),t._v(" "),a("p",[a("span",{staticClass:"katex-display"},[a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[t._v("m")]),a("mi",[t._v("i")]),a("mi",[t._v("n")]),a("mo",[t._v("(")]),a("mi",[t._v("x")]),a("mo",[t._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("min (x) \n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base displaystyle textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[t._v("m")]),a("span",{staticClass:"mord mathit"},[t._v("i")]),a("span",{staticClass:"mord mathit"},[t._v("n")]),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord mathit"},[t._v("x")]),a("span",{staticClass:"mclose"},[t._v(")")])])])])])])]),t._v(" "),a("li",[a("p",[t._v("代码")])])]),t._v(" "),a("h2",{attrs:{id:"_4-备注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-备注"}},[t._v("#")]),t._v(" 4. 备注")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"http://geatpy.com/index.php/home/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Geatpy 官网🔗"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.jianshu.com/p/ae5157c26af9",target:"_blank",rel:"noopener noreferrer"}},[t._v("超详细的遗传算法 (Genetic Algorithm) 解析🔗"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_32252957/article/details/84334997",target:"_blank",rel:"noopener noreferrer"}},[t._v("粒子群算法和遗传算法的比较🔗"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/427787159",target:"_blank",rel:"noopener noreferrer"}},[t._v("遗传算法 与 粒子群算法孰好🔗"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);